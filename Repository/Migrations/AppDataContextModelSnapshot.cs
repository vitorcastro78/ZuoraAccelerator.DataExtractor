// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.DataContext;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ZIP2GO.Repository.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("AutoPay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Batch")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("BillCycleDay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BillToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillToId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentSettingsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommunicationProfileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CrmId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultPaymentMethodId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentAccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentGateway")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingCreditMemoBalance")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingDebitMemoBalance")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingInvoiceBalance")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingPaymentBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("SalesRep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SequenceSetId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SoldToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SoldToId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaxCertificateId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaxIdentifierId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillToId1");

                    b.HasIndex("BillingDocumentSettingsId");

                    b.HasIndex("BillingDocumentsId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("SoldToId1");

                    b.HasIndex("TaxCertificateId");

                    b.HasIndex("TaxIdentifierId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.AchDebit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAbaCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("AchDebit");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.AddressFieldDefinitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AddressFieldDefinitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Amounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Amounts");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ApplePay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CardId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("MandateId");

                    b.ToTable("ApplePay");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ArTransactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("CreditMemoNumbers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("InvoiceNumbers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ArTransaction");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.AuBecsDebit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("AuBecsDebit");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.AutogiroDebit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("AutogiroDebit");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BacsDebit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("BacsDebit");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BetalingsDebit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("BetalingsDebit");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("BillingDetails");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountRefunded")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingDocumentNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ExcludeFromAutoApplyRules")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Paid")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("PastDue")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Pay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PostedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReasonCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Total")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TransferToAccounting")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.ToTable("BillingDocument");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocumentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountsReceivableAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppliedToItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingDocumentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("BookingReference")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeferredRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("DiscountItem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DocumentItemDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OnAccountAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PaymentsAppliedToId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecognizedRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("RevenueRecognitionRuleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceStart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionItemId1")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TaxInclusive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UnitAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillingDocumentId1");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("PaymentsAppliedToId");

                    b.HasIndex("SubscriptionId1");

                    b.HasIndex("SubscriptionItemId1");

                    b.ToTable("BillingDocumentItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocumentSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("AdditionalEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreditMemoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditMemoTemplateId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DebitMemoTemplateId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("EmailDocuments")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InvoiceTemplateId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("PrintDocuments")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreditMemoId");

                    b.ToTable("BillingDocumentSetting");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocumentStateTransitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BillingDocumentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CanceledTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostedTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillingDocumentId");

                    b.ToTable("BillingDocumentStateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExpiryMonth")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExpiryYear")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last4")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CardMandate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerAcceptanceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NetworkTransactionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Verified")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Verify")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomerAcceptanceId");

                    b.ToTable("CardMandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CcRef", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CardId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("MandateId");

                    b.ToTable("CcRef");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CcRefCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExpiryMonth")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExpiryYear")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last4")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CcRefCard");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HomePhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherPhoneType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxRegion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CreditMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountRefunded")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ArTransactionsId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillToId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreditMemoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditMemoNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ExcludeFromAutoApplyRules")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReasonCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StateTransitionsId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Total")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TransferToAccounting")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId1");

                    b.HasIndex("ArTransactionsId");

                    b.HasIndex("BillToId1");

                    b.HasIndex("CreditMemoId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("StateTransitionsId");

                    b.ToTable("CreditMemo");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CreditMemoAppliedTo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingDocumentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingDocumentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillingDocumentId1");

                    b.ToTable("CreditMemoAppliedTo");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CreditMemoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountsReceivableAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppliedToItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditMemoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreditMemoId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeferredRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("DiscountItem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DocumentItemDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OnAccountAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecognizedRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("RevenueRecognitionRuleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceStart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionItemId1")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TaxInclusive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("UnitAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreditMemoId1");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("SubscriptionId1");

                    b.HasIndex("SubscriptionItemId1");

                    b.ToTable("CreditMemoItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CustomFields", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomFields");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CustomObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomObject");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CustomerAcceptanceMandate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CustomerAcceptanceMandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.DebitMemo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountRefunded")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillToId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentSettingsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DebitMemoNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ExcludeFromAutoApplyRules")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Paid")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("PastDue")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Pay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReasonCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StateTransitionsId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Total")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TransferToAccounting")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId1");

                    b.HasIndex("BillToId1");

                    b.HasIndex("BillingDocumentSettingsId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("StateTransitionsId");

                    b.ToTable("DebitMemo");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.DebitMemoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountsReceivableAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppliedToItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DebitMemoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DebitMemoId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeferredRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("DiscountItem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DocumentItemDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OnAccountAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecognizedRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("RevenueRecognitionRuleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceStart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionItemId1")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TaxInclusive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("UnitAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("DebitMemoId1");

                    b.HasIndex("SubscriptionId1");

                    b.HasIndex("SubscriptionItemId1");

                    b.ToTable("DebitMemoItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Detail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Detail");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Drawdown", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Drawdown");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.GatewayOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GatewayOptions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.GatewayStateTransitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("MarkedForSubmissionTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SettledTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SubmittedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GatewayStateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.GetCardList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExpiryMonth")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExpiryYear")
                        .HasColumnType("TEXT");

                    b.Property<string>("Last4")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("GetCardList");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.GooglePay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CardId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("GooglePay");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ArTransactionsId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillToId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentSettingsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Paid")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("PastDue")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Pay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoldToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SoldToId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StateTransitionsId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Total")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TransferToAccounting")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId1");

                    b.HasIndex("ArTransactionsId");

                    b.HasIndex("BillToId1");

                    b.HasIndex("BillingDocumentSettingsId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("SoldToId1");

                    b.HasIndex("StateTransitionsId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.InvoiceItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountsReceivableAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppliedToItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BookingReference")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeferredRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("DiscountItem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DocumentItemDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InvoiceId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LineItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecognizedRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("RevenueRecognitionRuleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceEnd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceStart")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionItemId1")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TaxInclusive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("UnitAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("InvoiceId1");

                    b.HasIndex("LineItemId");

                    b.HasIndex("SubscriptionId1");

                    b.HasIndex("SubscriptionItemId1");

                    b.ToTable("InvoiceItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ItemTier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SubscriptionItemId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UnitAmount")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UpTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionItemId");

                    b.ToTable("ItemTier");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Mandate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Money", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Money");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.NzBecsDebit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("NzBecsDebit");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId1");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdjustmentLiabilityAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingRule")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractAssetAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractLiabilityAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountTotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountUnitAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ListPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ListUnitPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OrderId1")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OriginalOrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalOrderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalOrderLineItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalOrderLineItemNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalSoldToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PurchaseOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("QuantityAvailableForReturn")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("QuantityFulfilled")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("QuantityPendingFulfillment")
                        .HasColumnType("TEXT");

                    b.Property<string>("RelatedSubscriptionNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("RequiresFulfillment")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RevenueId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoldToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TaxInclusive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Total")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UnbilledReceivablesAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UnitAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("OrderId1");

                    b.HasIndex("RevenueId");

                    b.ToTable("OrderLineItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.OrderLineItemRevenue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdjustmentRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractRecognizedRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeferredRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ExcludeItemBillingFromRevenueAccounting")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("ExcludeItemBookingFromRevenueAccounting")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecognizedRevenueAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RevenueRecognitionRuleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OrderLineItemRevenue");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Overage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ApplyAtEndOfSmoothingPeriod")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("CreditUnusedUnits")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("IncludedUnits")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IntervalCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Overage");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PadDebit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("PadDebit");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountApplied")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountRefunded")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorizationId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("External")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GatewayId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GatewayOptionsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayOrderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayReconciliationReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayReconciliationStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayResponse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayResponseCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GatewayStateTransitionsId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethodId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaymentMethodId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PaymentTransactionsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PayoutId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondReferenceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StateTransitionsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatementDescriptor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StatementDescriptorPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId1");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("GatewayOptionsId");

                    b.HasIndex("GatewayStateTransitionsId");

                    b.HasIndex("PaymentMethodId1");

                    b.HasIndex("PaymentTransactionsId");

                    b.HasIndex("StateTransitionsId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AchDebitId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ApplePayId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuBecsDebitId")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("AutoGenerated")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AutogiroDebitId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BacsDebitId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BankIdentificationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BetalingsDebitId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDetailsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CardId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CcRefId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceSessionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ExistingMandate")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GooglePayId")
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastFailedSaleTransactionTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastTransactionStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastTransactionTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MaximumPaymentAttempts")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NumberOfConsecutiveFailures")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("NzBecsDebitId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PadDebitId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PaymentRetryInterval")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PaypalAdaptiveId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaypalExpressId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaypalExpressNativeId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SepaDebitId")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TotalNumberOfErrorPayments")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TotalNumberOfProcessedPayments")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("UseDefaultRetryRule")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId1");

                    b.HasIndex("AchDebitId");

                    b.HasIndex("ApplePayId");

                    b.HasIndex("AuBecsDebitId");

                    b.HasIndex("AutogiroDebitId");

                    b.HasIndex("BacsDebitId");

                    b.HasIndex("BetalingsDebitId");

                    b.HasIndex("BillingDetailsId");

                    b.HasIndex("CardId");

                    b.HasIndex("CcRefId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("GooglePayId");

                    b.HasIndex("NzBecsDebitId");

                    b.HasIndex("PadDebitId");

                    b.HasIndex("PaypalAdaptiveId");

                    b.HasIndex("PaypalExpressId");

                    b.HasIndex("PaypalExpressNativeId");

                    b.HasIndex("SepaDebitId");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DetailId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PaymentScheduleId")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.HasIndex("PaymentScheduleId");

                    b.ToTable("PaymentOption");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Custom")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NextPaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NumberOfPayments")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PaymentGatewayId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethodId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentScheduleNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Prepayment")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RecentPaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RunHour")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Standalone")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TotalPaymentsErrored")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TotalPaymentsProcessed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillingDocumentId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.ToTable("PaymentSchedule");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentScheduleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CancellationReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentGatewayId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethodId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentOptionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentScheduleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaymentScheduleId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentScheduleItemNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentScheduleNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RunHour")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Standalone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillingDocumentId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("PaymentScheduleId1");

                    b.ToTable("PaymentScheduleItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentScheduleItemPayments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PaymentScheduleItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PaymentScheduleItemId");

                    b.ToTable("PaymentScheduleItemPayments");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentStateTransitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CanceledTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PaymentStateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentTransactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Amount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ArTransactionsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArTransactionsId");

                    b.HasIndex("StateId");

                    b.ToTable("PaymentTransaction");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentsAppliedTo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingDocumentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingDocumentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillingDocumentId1");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentsAppliedTo");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaypalAdaptive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PreapprovalKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PaypalAdaptive");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaypalExpress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Baid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PaypalExpress");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaypalExpressNative", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Baid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PaypalExpressNative");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Active")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("ActiveCurrencies")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("ProductId1");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PrepaidBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrepaidUOM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalBalance")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("PrepaidBalance");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PrepaidBalanceTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PrepaidBalanceId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ValidityPeriodId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PrepaidBalanceId");

                    b.HasIndex("ValidityPeriodId");

                    b.ToTable("PrepaidBalanceTransaction");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PrepaidBalances", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("PrepaidBalances");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Prepayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditOption")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ValidityPeriod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Prepayment");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Price", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AmountsId")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("ApplyDiscountTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChargeModel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChargeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomFieldPerUnitRate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomFieldTotalAmount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeferredRevenueAccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiscountAmountsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiscountLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DrawdownId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MaxQuantity")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MinQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OverageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PlanId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrepaymentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceBaseInterval")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecognizedRevenueAccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RecurringId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevenueId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RevenueRecognitionRule")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("StackedDiscount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartEvent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TaxInclusive")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Taxable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TiersMode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnitAmountsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AmountsId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("DiscountAmountsId");

                    b.HasIndex("DrawdownId");

                    b.HasIndex("OverageId");

                    b.HasIndex("PlanId1");

                    b.HasIndex("PrepaymentId");

                    b.HasIndex("RecurringId");

                    b.HasIndex("RevenueId");

                    b.HasIndex("UnitAmountsId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ProductPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Active")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("ActiveCurrencies")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("ProductId1");

                    b.ToTable("ProductPlan");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ProductPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AmountsId")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("ApplyDiscountTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChargeModel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChargeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomFieldPerUnitRate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomFieldTotalAmount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeferredRevenueAccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiscountAmountsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiscountLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DrawdownId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MaxQuantity")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MinQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OverageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrepaymentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceBaseInterval")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductPlanId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProductPlanId1")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecognizedRevenueAccountingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RecurringId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RevenueId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RevenueRecognitionRule")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("StackedDiscount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartEvent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TaxInclusive")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Taxable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TiersMode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnitAmountsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AmountsId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("DiscountAmountsId");

                    b.HasIndex("DrawdownId");

                    b.HasIndex("OverageId");

                    b.HasIndex("PrepaymentId");

                    b.HasIndex("ProductPlanId1");

                    b.HasIndex("RecurringId");

                    b.HasIndex("RevenueId");

                    b.HasIndex("UnitAmountsId");

                    b.ToTable("ProductPrice");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ProductTier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AmountsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProductPriceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnitAmountsId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UpTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AmountsId");

                    b.HasIndex("ProductPriceId");

                    b.HasIndex("UnitAmountsId");

                    b.ToTable("ProductTier");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Recurring", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AlignmentBehavior")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DurationInterval")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DurationIntervalCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Formula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Interval")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IntervalCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("On")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RatingGroup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RecurringOn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Timing")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Usage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Recurring");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Refund", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId1")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("BankAccountAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreditMemoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("External")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GatewayId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GatewayOptionsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayReconciliationReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayReconciliationStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayResponse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayResponseCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OnAccountAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentMethodId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaymentMethodId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("PayoutId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReasonCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefundDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefundMethodType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefundNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RefundTransactionsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondReferenceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StateTransitionsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatementDescriptor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StatementDescriptorPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UnappliedPaymentAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId1");

                    b.HasIndex("CreditMemoId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("GatewayOptionsId");

                    b.HasIndex("PaymentMethodId1");

                    b.HasIndex("RefundTransactionsId");

                    b.HasIndex("StateTransitionsId");

                    b.ToTable("Refund");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.RefundAppliedToItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditMemoItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RefundsAppliedToId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxationItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RefundsAppliedToId");

                    b.ToTable("RefundAppliedToItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.RefundStateTransitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CanceledTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefundedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RefundStateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.RefundTransactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ArTransactionsId")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("InvoiceNumbers")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefundNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArTransactionsId");

                    b.HasIndex("StateId");

                    b.ToTable("RefundTransaction");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.RefundsAppliedTo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingDocumentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingDocumentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaymentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("RefundId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillingDocumentId1");

                    b.HasIndex("PaymentId");

                    b.HasIndex("RefundId");

                    b.ToTable("RefundsAppliedTo");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ResumeSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ExtendTerm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResumeAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResumeDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.ToTable("ResumeSubscription");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Revenue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("ExcludeItemBillingFromRevenueAccounting")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("ExcludeItemBookingFromRevenueAccounting")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Revenue");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SepaDebit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessIdentificationCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MandateId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MandateId");

                    b.ToTable("SepaDebit");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.StateTransitions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CanceledTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostedTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId1")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("AutoRenew")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BillToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillToId1")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BillingDocumentSettingsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CancelReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ContractEffective")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractedMrr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CurrentTermId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CustomerAcceptance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InitialTermId")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceOwnerAccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InvoiceOwnerAccountId1")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("InvoiceSeparately")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastBookingDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("LatestVersion")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RenewalTermId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ServiceActivation")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoldToId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SoldToId1")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId1");

                    b.HasIndex("BillToId1");

                    b.HasIndex("BillingDocumentSettingsId");

                    b.HasIndex("CurrentTermId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("InitialTermId");

                    b.HasIndex("InvoiceOwnerAccountId1");

                    b.HasIndex("OrderId");

                    b.HasIndex("RenewalTermId");

                    b.HasIndex("SoldToId1");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionAddPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UniqueToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.ToTable("SubscriptionAddPlan");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionCancel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CancelAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionCancel");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("ApplyDiscountTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChargeModel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChargeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ChargedThroughDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiscountLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OverageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceBaseInterval")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PriceId1")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ProcessedThroughDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RecurringId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StartEvent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SubscriptionAddPlanId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionItemNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionPlanId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionPlanId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TaxInclusive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TiersMode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UnitAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("OverageId");

                    b.HasIndex("PriceId1");

                    b.HasIndex("RecurringId");

                    b.HasIndex("SubscriptionAddPlanId");

                    b.HasIndex("SubscriptionPlanId1");

                    b.ToTable("SubscriptionItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionPause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PauseAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PauseDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PauseInterval")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PauseIntervalCount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ResumeBehaviorId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("ResumeBehaviorId");

                    b.ToTable("SubscriptionPause");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlanId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlanId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubscriptionId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("PlanId1");

                    b.HasIndex("ProductId1");

                    b.HasIndex("SubscriptionId1");

                    b.ToTable("SubscriptionPlan");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionRemovePlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionPlanId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionRemovePlan");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionRenew", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TermsId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TermsId");

                    b.ToTable("SubscriptionRenew");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("AutoRenew")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CurrentTermId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RenewalTermId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentTermId");

                    b.HasIndex("RenewalTermId");

                    b.ToTable("SubscriptionTerm");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.TaxCertificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntityUseCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IssuingJurisdiction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxIdentifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TaxCertificate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.TaxIdentifier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TaxIdentifier");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.TaxationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountApplied")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountCredited")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountExempt")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("AmountRefunded")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BillingDocumentItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreditMemoItemId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DebitMemoItemId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("InvoiceItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Jurisdiction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OnAccountAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<string>("SalesTaxPayableAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceTaxItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxCodeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("TaxInclusive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxRateName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxRateType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BillingDocumentItemId");

                    b.HasIndex("CreditMemoItemId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.HasIndex("DebitMemoItemId");

                    b.HasIndex("InvoiceItemId");

                    b.ToTable("TaxationItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Term", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Interval")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IntervalCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Term");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Tier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AmountsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PriceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UnitAmountsId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("UpTo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AmountsId");

                    b.HasIndex("PriceId");

                    b.HasIndex("UnitAmountsId");

                    b.ToTable("Tier");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.TransactionsState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Failed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Succeeded")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TransactionsState");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Usage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomFieldsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomObjectsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionItemNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubscriptionNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId1");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("CustomObjectsId");

                    b.ToTable("Usage");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ValidityPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("OverageRatedAmount")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("OverageRatedQuantity")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PrepaidBalancesId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrepaidUOM")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("RemainingBalance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalBalance")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PrepaidBalancesId");

                    b.ToTable("ValidityPeriod");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Account", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Contact", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.BillingDocumentSettings", "BillingDocumentSettings")
                        .WithMany()
                        .HasForeignKey("BillingDocumentSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.BillingDocument", "BillingDocuments")
                        .WithMany()
                        .HasForeignKey("BillingDocumentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Contact", "SoldTo")
                        .WithMany()
                        .HasForeignKey("SoldToId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.TaxCertificate", "TaxCertificate")
                        .WithMany()
                        .HasForeignKey("TaxCertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.TaxIdentifier", "TaxIdentifier")
                        .WithMany()
                        .HasForeignKey("TaxIdentifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillTo");

                    b.Navigation("BillingDocumentSettings");

                    b.Navigation("BillingDocuments");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("SoldTo");

                    b.Navigation("TaxCertificate");

                    b.Navigation("TaxIdentifier");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.AchDebit", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ApplePay", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.AuBecsDebit", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.AutogiroDebit", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BacsDebit", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BetalingsDebit", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDetails", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.AddressFieldDefinitions", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocument", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocumentItem", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.BillingDocument", "BillingDocument")
                        .WithMany("Items")
                        .HasForeignKey("BillingDocumentId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PaymentsAppliedTo", null)
                        .WithMany("Items")
                        .HasForeignKey("PaymentsAppliedToId");

                    b.HasOne("ZIP2GO.Repository.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.SubscriptionItem", "SubscriptionItem")
                        .WithMany()
                        .HasForeignKey("SubscriptionItemId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingDocument");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("Subscription");

                    b.Navigation("SubscriptionItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocumentSettings", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CreditMemo", null)
                        .WithMany("BillingDocumentSettings")
                        .HasForeignKey("CreditMemoId");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocumentStateTransitions", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.BillingDocument", null)
                        .WithMany("StateTransitions")
                        .HasForeignKey("BillingDocumentId");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Card", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CardMandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CardMandate", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomerAcceptanceMandate", "CustomerAcceptance")
                        .WithMany()
                        .HasForeignKey("CustomerAcceptanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerAcceptance");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CcRef", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CcRefCard", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Contact", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CreditMemo", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Account", "Account")
                        .WithMany("CreditMemos")
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.ArTransactions", null)
                        .WithMany("CreditMemos")
                        .HasForeignKey("ArTransactionsId");

                    b.HasOne("ZIP2GO.Repository.Models.Contact", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CreditMemo", null)
                        .WithMany("AppliedTo")
                        .HasForeignKey("CreditMemoId");

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.StateTransitions", "StateTransitions")
                        .WithMany()
                        .HasForeignKey("StateTransitionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("BillTo");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("StateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CreditMemoAppliedTo", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.BillingDocument", "BillingDocument")
                        .WithMany()
                        .HasForeignKey("BillingDocumentId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingDocument");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CreditMemoItem", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CreditMemo", "CreditMemo")
                        .WithMany("Items")
                        .HasForeignKey("CreditMemoId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.SubscriptionItem", "SubscriptionItem")
                        .WithMany()
                        .HasForeignKey("SubscriptionItemId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditMemo");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("Subscription");

                    b.Navigation("SubscriptionItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.DebitMemo", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Account", "Account")
                        .WithMany("DebitMemos")
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Contact", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.BillingDocumentSettings", "BillingDocumentSettings")
                        .WithMany()
                        .HasForeignKey("BillingDocumentSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.StateTransitions", "StateTransitions")
                        .WithMany()
                        .HasForeignKey("StateTransitionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("BillTo");

                    b.Navigation("BillingDocumentSettings");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("StateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.DebitMemoItem", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.DebitMemo", "DebitMemo")
                        .WithMany("Items")
                        .HasForeignKey("DebitMemoId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.SubscriptionItem", "SubscriptionItem")
                        .WithMany()
                        .HasForeignKey("SubscriptionItemId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("DebitMemo");

                    b.Navigation("Subscription");

                    b.Navigation("SubscriptionItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.GetCardList", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.GooglePay", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Invoice", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Account", "Account")
                        .WithMany("Invoices")
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.ArTransactions", null)
                        .WithMany("Invoices")
                        .HasForeignKey("ArTransactionsId");

                    b.HasOne("ZIP2GO.Repository.Models.Contact", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.BillingDocumentSettings", "BillingDocumentSettings")
                        .WithMany()
                        .HasForeignKey("BillingDocumentSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Contact", "SoldTo")
                        .WithMany()
                        .HasForeignKey("SoldToId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.StateTransitions", "StateTransitions")
                        .WithMany()
                        .HasForeignKey("StateTransitionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("BillTo");

                    b.Navigation("BillingDocumentSettings");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("SoldTo");

                    b.Navigation("StateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.InvoiceItem", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Invoice", "Invoice")
                        .WithMany("Items")
                        .HasForeignKey("InvoiceId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.OrderItem", "LineItem")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("LineItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Subscription", "Subscription")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("SubscriptionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.SubscriptionItem", "SubscriptionItem")
                        .WithMany()
                        .HasForeignKey("SubscriptionItemId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("Invoice");

                    b.Navigation("LineItem");

                    b.Navigation("Subscription");

                    b.Navigation("SubscriptionItem");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ItemTier", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.SubscriptionItem", null)
                        .WithMany("Tiers")
                        .HasForeignKey("SubscriptionItemId");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.NzBecsDebit", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Order", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.OrderItem", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Order", null)
                        .WithMany("LineItems")
                        .HasForeignKey("OrderId1");

                    b.HasOne("ZIP2GO.Repository.Models.OrderLineItemRevenue", "Revenue")
                        .WithMany()
                        .HasForeignKey("RevenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("Revenue");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PadDebit", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Payment", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Account", "Account")
                        .WithMany("Payments")
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.GatewayOptions", "GatewayOptions")
                        .WithMany()
                        .HasForeignKey("GatewayOptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.GatewayStateTransitions", "GatewayStateTransitions")
                        .WithMany()
                        .HasForeignKey("GatewayStateTransitionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PaymentTransactions", null)
                        .WithMany("Payments")
                        .HasForeignKey("PaymentTransactionsId");

                    b.HasOne("ZIP2GO.Repository.Models.PaymentStateTransitions", "StateTransitions")
                        .WithMany()
                        .HasForeignKey("StateTransitionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("GatewayOptions");

                    b.Navigation("GatewayStateTransitions");

                    b.Navigation("PaymentMethod");

                    b.Navigation("StateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentMethod", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Account", "Account")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.AchDebit", "AchDebit")
                        .WithMany()
                        .HasForeignKey("AchDebitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.ApplePay", "ApplePay")
                        .WithMany()
                        .HasForeignKey("ApplePayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.AuBecsDebit", "AuBecsDebit")
                        .WithMany()
                        .HasForeignKey("AuBecsDebitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.AutogiroDebit", "AutogiroDebit")
                        .WithMany()
                        .HasForeignKey("AutogiroDebitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.BacsDebit", "BacsDebit")
                        .WithMany()
                        .HasForeignKey("BacsDebitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.BetalingsDebit", "BetalingsDebit")
                        .WithMany()
                        .HasForeignKey("BetalingsDebitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.BillingDetails", "BillingDetails")
                        .WithMany()
                        .HasForeignKey("BillingDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.GetCardList", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CcRef", "CcRef")
                        .WithMany()
                        .HasForeignKey("CcRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.GooglePay", "GooglePay")
                        .WithMany()
                        .HasForeignKey("GooglePayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.NzBecsDebit", "NzBecsDebit")
                        .WithMany()
                        .HasForeignKey("NzBecsDebitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PadDebit", "PadDebit")
                        .WithMany()
                        .HasForeignKey("PadDebitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PaypalAdaptive", "PaypalAdaptive")
                        .WithMany()
                        .HasForeignKey("PaypalAdaptiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PaypalExpress", "PaypalExpress")
                        .WithMany()
                        .HasForeignKey("PaypalExpressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PaypalExpressNative", "PaypalExpressNative")
                        .WithMany()
                        .HasForeignKey("PaypalExpressNativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.SepaDebit", "SepaDebit")
                        .WithMany()
                        .HasForeignKey("SepaDebitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AchDebit");

                    b.Navigation("ApplePay");

                    b.Navigation("AuBecsDebit");

                    b.Navigation("AutogiroDebit");

                    b.Navigation("BacsDebit");

                    b.Navigation("BetalingsDebit");

                    b.Navigation("BillingDetails");

                    b.Navigation("Card");

                    b.Navigation("CcRef");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("GooglePay");

                    b.Navigation("NzBecsDebit");

                    b.Navigation("PadDebit");

                    b.Navigation("PaypalAdaptive");

                    b.Navigation("PaypalExpress");

                    b.Navigation("PaypalExpressNative");

                    b.Navigation("SepaDebit");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentOption", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Detail", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PaymentSchedule", null)
                        .WithMany("PaymentOptions")
                        .HasForeignKey("PaymentScheduleId");

                    b.Navigation("Detail");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentSchedule", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.BillingDocument", "BillingDocument")
                        .WithMany()
                        .HasForeignKey("BillingDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingDocument");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentScheduleItem", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.BillingDocument", "BillingDocument")
                        .WithMany()
                        .HasForeignKey("BillingDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Payment", "Payment")
                        .WithMany("PaymentScheduleItems")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PaymentSchedule", "PaymentSchedule")
                        .WithMany("Items")
                        .HasForeignKey("PaymentScheduleId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingDocument");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("Payment");

                    b.Navigation("PaymentSchedule");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentScheduleItemPayments", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.PaymentScheduleItem", null)
                        .WithMany("Payments")
                        .HasForeignKey("PaymentScheduleItemId");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentTransactions", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.ArTransactions", null)
                        .WithMany("Payments")
                        .HasForeignKey("ArTransactionsId");

                    b.HasOne("ZIP2GO.Repository.Models.TransactionsState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentsAppliedTo", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.BillingDocument", "BillingDocument")
                        .WithMany()
                        .HasForeignKey("BillingDocumentId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Payment", null)
                        .WithMany("AppliedTo")
                        .HasForeignKey("PaymentId");

                    b.Navigation("BillingDocument");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Plan", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PrepaidBalance", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Subscription", null)
                        .WithMany("PrepaidBalance")
                        .HasForeignKey("SubscriptionId");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PrepaidBalanceTransaction", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.PrepaidBalance", null)
                        .WithMany("Transactions")
                        .HasForeignKey("PrepaidBalanceId");

                    b.HasOne("ZIP2GO.Repository.Models.ValidityPeriod", null)
                        .WithMany("Transactions")
                        .HasForeignKey("ValidityPeriodId");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PrepaidBalances", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Subscription", null)
                        .WithMany("PrepaidBalances")
                        .HasForeignKey("SubscriptionId");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Price", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Amounts", "Amounts")
                        .WithMany()
                        .HasForeignKey("AmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Amounts", "DiscountAmounts")
                        .WithMany()
                        .HasForeignKey("DiscountAmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Drawdown", "Drawdown")
                        .WithMany()
                        .HasForeignKey("DrawdownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Overage", "Overage")
                        .WithMany()
                        .HasForeignKey("OverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Plan", null)
                        .WithMany("Prices")
                        .HasForeignKey("PlanId1");

                    b.HasOne("ZIP2GO.Repository.Models.Prepayment", "Prepayment")
                        .WithMany()
                        .HasForeignKey("PrepaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Recurring", "Recurring")
                        .WithMany()
                        .HasForeignKey("RecurringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Revenue", "Revenue")
                        .WithMany()
                        .HasForeignKey("RevenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Amounts", "UnitAmounts")
                        .WithMany()
                        .HasForeignKey("UnitAmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amounts");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("DiscountAmounts");

                    b.Navigation("Drawdown");

                    b.Navigation("Overage");

                    b.Navigation("Prepayment");

                    b.Navigation("Recurring");

                    b.Navigation("Revenue");

                    b.Navigation("UnitAmounts");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Product", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ProductPlan", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Product", "Product")
                        .WithMany("Plans")
                        .HasForeignKey("ProductId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ProductPrice", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Amounts", "Amounts")
                        .WithMany()
                        .HasForeignKey("AmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Amounts", "DiscountAmounts")
                        .WithMany()
                        .HasForeignKey("DiscountAmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Drawdown", "Drawdown")
                        .WithMany()
                        .HasForeignKey("DrawdownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Overage", "Overage")
                        .WithMany()
                        .HasForeignKey("OverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Prepayment", "Prepayment")
                        .WithMany()
                        .HasForeignKey("PrepaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.ProductPlan", null)
                        .WithMany("Prices")
                        .HasForeignKey("ProductPlanId1");

                    b.HasOne("ZIP2GO.Repository.Models.Recurring", "Recurring")
                        .WithMany()
                        .HasForeignKey("RecurringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Revenue", "Revenue")
                        .WithMany()
                        .HasForeignKey("RevenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Amounts", "UnitAmounts")
                        .WithMany()
                        .HasForeignKey("UnitAmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amounts");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("DiscountAmounts");

                    b.Navigation("Drawdown");

                    b.Navigation("Overage");

                    b.Navigation("Prepayment");

                    b.Navigation("Recurring");

                    b.Navigation("Revenue");

                    b.Navigation("UnitAmounts");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ProductTier", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Money", "Amounts")
                        .WithMany()
                        .HasForeignKey("AmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.ProductPrice", null)
                        .WithMany("Tiers")
                        .HasForeignKey("ProductPriceId");

                    b.HasOne("ZIP2GO.Repository.Models.Money", "UnitAmounts")
                        .WithMany()
                        .HasForeignKey("UnitAmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amounts");

                    b.Navigation("UnitAmounts");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Refund", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CreditMemo", "CreditMemo")
                        .WithMany()
                        .HasForeignKey("CreditMemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.GatewayOptions", "GatewayOptions")
                        .WithMany()
                        .HasForeignKey("GatewayOptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.RefundTransactions", null)
                        .WithMany("Refunds")
                        .HasForeignKey("RefundTransactionsId");

                    b.HasOne("ZIP2GO.Repository.Models.RefundStateTransitions", "StateTransitions")
                        .WithMany()
                        .HasForeignKey("StateTransitionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CreditMemo");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("GatewayOptions");

                    b.Navigation("PaymentMethod");

                    b.Navigation("StateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.RefundAppliedToItem", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.RefundsAppliedTo", null)
                        .WithMany("Items")
                        .HasForeignKey("RefundsAppliedToId");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.RefundTransactions", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.ArTransactions", null)
                        .WithMany("Refunds")
                        .HasForeignKey("ArTransactionsId");

                    b.HasOne("ZIP2GO.Repository.Models.TransactionsState", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.RefundsAppliedTo", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.BillingDocument", "BillingDocument")
                        .WithMany()
                        .HasForeignKey("BillingDocumentId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Refund", null)
                        .WithMany("AppliedTo")
                        .HasForeignKey("RefundId");

                    b.Navigation("BillingDocument");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ResumeSubscription", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SepaDebit", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Mandate", "Mandate")
                        .WithMany()
                        .HasForeignKey("MandateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandate");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Subscription", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Contact", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.BillingDocumentSettings", "BillingDocumentSettings")
                        .WithMany()
                        .HasForeignKey("BillingDocumentSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Term", "CurrentTerm")
                        .WithMany()
                        .HasForeignKey("CurrentTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Term", "InitialTerm")
                        .WithMany()
                        .HasForeignKey("InitialTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Account", "InvoiceOwnerAccount")
                        .WithMany()
                        .HasForeignKey("InvoiceOwnerAccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Order", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("OrderId");

                    b.HasOne("ZIP2GO.Repository.Models.Term", "RenewalTerm")
                        .WithMany()
                        .HasForeignKey("RenewalTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Contact", "SoldTo")
                        .WithMany()
                        .HasForeignKey("SoldToId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("BillTo");

                    b.Navigation("BillingDocumentSettings");

                    b.Navigation("CurrentTerm");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("InitialTerm");

                    b.Navigation("InvoiceOwnerAccount");

                    b.Navigation("RenewalTerm");

                    b.Navigation("SoldTo");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionAddPlan", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionItem", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Overage", "Overage")
                        .WithMany()
                        .HasForeignKey("OverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Recurring", "Recurring")
                        .WithMany()
                        .HasForeignKey("RecurringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.SubscriptionAddPlan", null)
                        .WithMany("SubscriptionItems")
                        .HasForeignKey("SubscriptionAddPlanId");

                    b.HasOne("ZIP2GO.Repository.Models.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("SubscriptionItems")
                        .HasForeignKey("SubscriptionPlanId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("Overage");

                    b.Navigation("Price");

                    b.Navigation("Recurring");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionPause", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.ResumeSubscription", "ResumeBehavior")
                        .WithMany()
                        .HasForeignKey("ResumeBehaviorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("ResumeBehavior");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionPlan", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Subscription", "Subscription")
                        .WithMany("SubscriptionPlans")
                        .HasForeignKey("SubscriptionId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");

                    b.Navigation("Plan");

                    b.Navigation("Product");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionRenew", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.SubscriptionTerm", "Terms")
                        .WithMany()
                        .HasForeignKey("TermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Terms");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionTerm", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Term", "CurrentTerm")
                        .WithMany()
                        .HasForeignKey("CurrentTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Term", "RenewalTerm")
                        .WithMany()
                        .HasForeignKey("RenewalTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentTerm");

                    b.Navigation("RenewalTerm");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.TaxationItem", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.BillingDocumentItem", null)
                        .WithMany("TaxationItems")
                        .HasForeignKey("BillingDocumentItemId");

                    b.HasOne("ZIP2GO.Repository.Models.CreditMemoItem", null)
                        .WithMany("TaxationItems")
                        .HasForeignKey("CreditMemoItemId");

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.DebitMemoItem", null)
                        .WithMany("TaxationItems")
                        .HasForeignKey("DebitMemoItemId");

                    b.HasOne("ZIP2GO.Repository.Models.InvoiceItem", null)
                        .WithMany("TaxationItems")
                        .HasForeignKey("InvoiceItemId");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Tier", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Money", "Amounts")
                        .WithMany()
                        .HasForeignKey("AmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.Price", null)
                        .WithMany("Tiers")
                        .HasForeignKey("PriceId");

                    b.HasOne("ZIP2GO.Repository.Models.Money", "UnitAmounts")
                        .WithMany()
                        .HasForeignKey("UnitAmountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amounts");

                    b.Navigation("UnitAmounts");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Usage", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.Account", "Account")
                        .WithMany("UsageRecords")
                        .HasForeignKey("AccountId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZIP2GO.Repository.Models.CustomObject", "CustomObjects")
                        .WithMany()
                        .HasForeignKey("CustomObjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CustomFields");

                    b.Navigation("CustomObjects");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ValidityPeriod", b =>
                {
                    b.HasOne("ZIP2GO.Repository.Models.PrepaidBalances", null)
                        .WithMany("ValidityPeriods")
                        .HasForeignKey("PrepaidBalancesId");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Account", b =>
                {
                    b.Navigation("CreditMemos");

                    b.Navigation("DebitMemos");

                    b.Navigation("Invoices");

                    b.Navigation("PaymentMethods");

                    b.Navigation("Payments");

                    b.Navigation("UsageRecords");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ArTransactions", b =>
                {
                    b.Navigation("CreditMemos");

                    b.Navigation("Invoices");

                    b.Navigation("Payments");

                    b.Navigation("Refunds");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocument", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("StateTransitions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.BillingDocumentItem", b =>
                {
                    b.Navigation("TaxationItems");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CreditMemo", b =>
                {
                    b.Navigation("AppliedTo");

                    b.Navigation("BillingDocumentSettings");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.CreditMemoItem", b =>
                {
                    b.Navigation("TaxationItems");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.DebitMemo", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.DebitMemoItem", b =>
                {
                    b.Navigation("TaxationItems");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Invoice", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.InvoiceItem", b =>
                {
                    b.Navigation("TaxationItems");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Order", b =>
                {
                    b.Navigation("LineItems");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.OrderItem", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Payment", b =>
                {
                    b.Navigation("AppliedTo");

                    b.Navigation("PaymentScheduleItems");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentSchedule", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("PaymentOptions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentScheduleItem", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentTransactions", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PaymentsAppliedTo", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Plan", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PrepaidBalance", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.PrepaidBalances", b =>
                {
                    b.Navigation("ValidityPeriods");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Price", b =>
                {
                    b.Navigation("Tiers");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Product", b =>
                {
                    b.Navigation("Plans");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ProductPlan", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ProductPrice", b =>
                {
                    b.Navigation("Tiers");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Refund", b =>
                {
                    b.Navigation("AppliedTo");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.RefundTransactions", b =>
                {
                    b.Navigation("Refunds");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.RefundsAppliedTo", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.Subscription", b =>
                {
                    b.Navigation("InvoiceItems");

                    b.Navigation("PrepaidBalance");

                    b.Navigation("PrepaidBalances");

                    b.Navigation("SubscriptionPlans");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionAddPlan", b =>
                {
                    b.Navigation("SubscriptionItems");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionItem", b =>
                {
                    b.Navigation("Tiers");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.SubscriptionPlan", b =>
                {
                    b.Navigation("SubscriptionItems");
                });

            modelBuilder.Entity("ZIP2GO.Repository.Models.ValidityPeriod", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
