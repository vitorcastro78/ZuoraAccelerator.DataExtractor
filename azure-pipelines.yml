trigger:
  - main

pool:
  vmImage: "windows-latest"

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  azureSubscription: 'Zaasly demo portal(4)(abf543e1-bae8-4e7a-89cd-2d96487aad43)' # Substitua pelo nome da sua conexão de serviço do Azure
  appServiceName: 'ZuoraAccelerator' # Substitua pelo nome do seu App Service

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Instalar NuGet'

    - task: NuGetCommand@2
      displayName: 'Restaurar Pacotes NuGet'
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: 'Compilar Solução'
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      displayName: 'Executar Testes Unitários'
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: ArchiveFiles@2
      displayName: 'Arquivar Arquivos'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/ZIP2Go.WebAPI/bin/$(buildConfiguration)/net8.0'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publicar Artefatos'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Azure App Service'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appName: '$(appServiceName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'auto' 